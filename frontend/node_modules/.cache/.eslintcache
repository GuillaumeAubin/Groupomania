[{"C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\index.js":"1","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\DataContext.js":"2","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\pages\\Home.js":"3","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\pages\\Login.js":"4","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\pages\\Forum.js":"5","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\pages\\Signup.js":"6","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\pages\\Profile.js":"8","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\Header.js":"9","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\Modal.js":"10","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\CommentSection.js":"11","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\ModifyModal.js":"12","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\DeleteAccModal.js":"13","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\AddCommentModal.js":"14"},{"size":998,"mtime":1639487663162,"results":"15","hashOfConfig":"16"},{"size":879,"mtime":1639477770533,"results":"17","hashOfConfig":"16"},{"size":2683,"mtime":1639487754151,"results":"18","hashOfConfig":"16"},{"size":2662,"mtime":1639487759603,"results":"19","hashOfConfig":"16"},{"size":8029,"mtime":1639487744411,"results":"20","hashOfConfig":"16"},{"size":2975,"mtime":1639487771947,"results":"21","hashOfConfig":"16"},{"size":324,"mtime":1635657979000,"results":"22","hashOfConfig":"16"},{"size":3685,"mtime":1639487763689,"results":"23","hashOfConfig":"16"},{"size":1390,"mtime":1635657979000,"results":"24","hashOfConfig":"16"},{"size":455,"mtime":1635657979000,"results":"25","hashOfConfig":"16"},{"size":3663,"mtime":1639477538467,"results":"26","hashOfConfig":"16"},{"size":478,"mtime":1635657979000,"results":"27","hashOfConfig":"16"},{"size":411,"mtime":1635657979000,"results":"28","hashOfConfig":"16"},{"size":453,"mtime":1635657979000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r44wz7",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\index.js",[],"C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\DataContext.js",[],["63","64"],"C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\pages\\Home.js",["65"],"import \"../style/home.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\nimport DataContext from \"../DataContext\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Home() {\n  const history = useHistory();\n\n  // redirection if user is not logged //\n\n  function redirectLogin() {\n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    if (!LStoken) {\n      redirectLogin();\n    }\n  }, []);\n\n  const { dataUser, LStoken } = useContext(DataContext);\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [hour, setHour] = useState([]);\n  const [day, setDay] = useState([]);\n  console.log(dataUser);\n\n  //console.log(dataUserId)\n\n  useEffect(() => {\n    // useEffect((dataUserId) => {\n\n    Axios.get(\n      \"http://localhost:4200/api/post/lastactivitypost\",\n\n      {\n        headers: {\n          Authorization: LStoken,\n        },\n      }\n    ).then((response) => {\n      setLatestPosts(response.data);\n      console.log(response.data.updatedAt);\n      const data = response.data;\n\n      function formateDate(data) {\n        for (let i = 0; i < data.length; i++) {\n          const str = data[i].createdAt.slice(0, 10);\n          const day = str.replaceAll(\"-\", \"/\");\n          setDay(day);\n          const hour = data[i].createdAt.slice(11, 19);\n          setHour(hour);\n        }\n      }\n      formateDate(data);\n    });\n  }, [LStoken]);\n\n  return (\n    <div>\n      <div className=\"home-container\">\n        <h1>Bienvenue {dataUser.name} ! </h1>\n        <div className=\"wrap-container\">\n          <div className=\"last-activities-container\">\n            <h2>Dernière activités sur le forum multimédia</h2>\n            <div className=\"underline\" />\n\n            <table className=\"table-last-activities\">\n              <thead>\n                <tr>\n                  <th className=\"column title\" colSpan=\"1\">\n                    Titre du post\n                  </th>\n                  <th className=\"column date\" colSpan=\"1\">\n                    Date de publication\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {latestPosts.map((post) => {\n                  return (\n                    <tr>\n                      <td className=\"col-body\">{post.title}</td>\n                      <td className=\"col-body col-body2\" id=\"date\">\n                        le {day} à {hour}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n\n            {/* <h3>Dernière activités sur le forum de discussion</h3> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\pages\\Login.js",[],"C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\pages\\Forum.js",["66","67","68","69","70","71","72"],"import React, { useEffect, useCallback, useState, useContext } from \"react\";\nimport Axios from \"axios\";\nimport \"../style/forum.css\";\n// import DropdownDelMod from '../components/DropdownDelMod'\nimport Modal from \"../components/Modal\";\nimport CommentSection from \"../components/CommentSection\";\nimport DataContext from \"../DataContext\";\nimport { useHistory } from \"react-router-dom\";\nimport FormData from \"form-data\";\nimport ModifyModal from \"../components/ModifyModal\";\nimport { FaPlus } from \"react-icons/fa\";\n\nexport default function Forum() {\n  const history = useHistory();\n\n  const { dataUser, LStoken } = useContext(DataContext);\n  // const { dataUser, LStoken, dataUserId } = useContext(DataContext)\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  // const [isOpen, setIsOpen] = useState(true)\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [isOpenModifyModal, setIsOpenModifyModal] = useState(false);\n  const [modifyPostId, setModifyPostId] = useState(\"\");\n  ///\n  const [file, setFile] = useState(\"\");\n\n  const userId = dataUser.id;\n\n  function getPostId(postId) {\n    setModifyPostId(postId);\n    console.log(modifyPostId);\n  }\n\n  function openModify() {\n    setIsOpenModifyModal(true);\n  }\n\n  // redirection if user is not logged //\n  function redirectLogin() {\n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    if (!LStoken) {\n      redirectLogin();\n    }\n  }, [LStoken]);\n\n  /////////////////////////////////////\n  const fetchPosts = useCallback(() => {\n    Axios.get(\"http://localhost:4200/api/post\", {\n      headers: {\n        Authorization: LStoken,\n      },\n    }).then((response) => {\n      setPosts(response.data);\n    });\n  }, [LStoken, posts]);\n\n  ///////////////////////////////////\n\n  const submitPost = useCallback(() => {\n    const userName = dataUser.name;\n    const userId = dataUser.id;\n    // formData auqul on ajoute un fichier + tout les champs text\n    const myformData = new FormData();\n    myformData.append(\"title\", title);\n    myformData.append(\"content\", content);\n    myformData.append(\"userId\", userId);\n    myformData.append(\"userName\", userName);\n    // ajouter champ moderator\n    myformData.append(\"file\", file);\n\n    Axios.post(\"http://localhost:4200/api/post\", myformData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: LStoken,\n      },\n    }).then((res) => console.log(res));\n    setIsOpenModal(!isOpenModal);\n    // refresh page after submit\n    window.location.reload();\n    setPosts([...posts, { title: title, content: content, image: file }]);\n  }, [content, title, file, userId, posts, LStoken, isOpenModal]);\n\n  ///////////////////////////////////\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  ///////////////////////////////////\n\n  const modifyPost = useCallback(() => {\n    const userName = dataUser.name;\n    const userId = dataUser.id;\n    const myformData = new FormData();\n    myformData.append(\"title\", title);\n    myformData.append(\"content\", content);\n    myformData.append(\"userId\", userId);\n    myformData.append(\"userName\", userName);\n    myformData.append(\"file\", file);\n\n    //Axios.post(\"http://localhost:4200/api/post\", myformData,\n    //Axios.put('https://httpbin.org/anything' , myFormData,\n    Axios.put(`http://localhost:4200/api/post/${modifyPostId}`, myformData, {\n      headers: {\n        Authorization: LStoken,\n      },\n    }).then((res) => console.log(res));\n    setIsOpenModal(!isOpenModal);\n    // refresh page after submit\n    window.location.reload();\n    setPosts([...posts, { title: title, content: content, image: file }]);\n  }, [content, title, file, userId, posts, LStoken, isOpenModal]);\n\n  ///////////////////////////////////\n\n  const deletePost = (id) => {\n    //   const deletePost = (id, userId) => {\n    Axios.delete(`http://localhost:4200/api/post/${id}`, {\n      headers: {\n        Authorization: LStoken,\n      },\n    });\n    const newPosts = posts.filter((post) => post.id !== id);\n    setPosts(newPosts);\n  };\n\n  return (\n    <div className=\"forum-container\">\n      <h1 className=\"hidden-h1\">Forum</h1>\n\n      <button className=\"btn upload\" onClick={() => setIsOpenModal(true)}>\n        <FaPlus />\n        Upload\n      </button>\n      <Modal open={isOpenModal} onClose={() => setIsOpenModal(false)}>\n        <input\n          className=\"input-file\"\n          placeholder=\"file\"\n          name=\"file\"\n          type=\"file\"\n          accept=\".jpg\"\n          onChange={(e) => {\n            const file = e.target.files[0];\n            setFile(file);\n          }}\n        ></input>\n        <input\n          className=\"input-title\"\n          placeholder=\"title\"\n          name=\"title\"\n          type=\"text\"\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n        ></input>\n        <textarea\n          className=\"input-content\"\n          placeholder=\"post\"\n          name=\"content\"\n          type=\"text\"\n          onChange={(e) => {\n            setContent(e.target.value);\n          }}\n        ></textarea>\n        <button className=\"submit-btn\" onClick={submitPost}>\n          SUBMIT\n        </button>\n      </Modal>\n\n      <ModifyModal\n        openModify={isOpenModifyModal}\n        onClose={() => setIsOpenModifyModal(false)}\n      >\n        <input\n          className=\"input-file\"\n          placeholder=\"file\"\n          name=\"file\"\n          type=\"file\"\n          accept=\".jpg\"\n          onChange={(e) => {\n            const file = e.target.files[0];\n            setFile(file);\n          }}\n        ></input>\n        <input\n          className=\"input-title\"\n          placeholder=\"title\"\n          name=\"title\"\n          type=\"text\"\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n        ></input>\n        <textarea\n          className=\"input-content\"\n          placeholder=\"post\"\n          name=\"content\"\n          type=\"text\"\n          onChange={(e) => {\n            setContent(e.target.value);\n          }}\n        ></textarea>\n        <button className=\"submit-btn\" onClick={modifyPost}>\n          MODIFY\n        </button>\n      </ModifyModal>\n\n      {posts.map((post) => {\n        //{posts.map((post, ofUser) => {\n        const postId = post.id;\n\n        return (\n          <div key={post.id} className=\"forum-card\">\n            <div className=\"card-title-box\">\n              <h2>{post.title} </h2>\n              <p className=\"created-by-tag-laptop\">\n                post créé par {post.userName}\n              </p>\n            </div>\n            <p className=\"created-by-tag-smartphone\">\n              post créé par {post.userName}\n            </p>\n            <div className=\"card-body\">\n              <img className=\"post-img\" src={`${post.imageUrl}`} alt=\"\" />\n              <div className=\"container-buttons\">\n                {post.userId == userId || dataUser.moderator == true ? (\n                  <div>\n                    <button\n                      className=\"delete-btn\"\n                      onClick={() => {\n                        deletePost(post.id, post.userId);\n                      }}\n                    >\n                      DELETE\n                    </button>\n                    <button\n                      className=\"modify-btn\"\n                      onClick={() => {\n                        openModify();\n                        getPostId(postId);\n                      }}\n                    >\n                      MODIFY\n                    </button>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n\n            <p>{post.content} </p>\n\n            {/* // <DropdownDelMod open={isOpen} postId={post.id} > */}\n\n            <div className=\"container-DropdownDelMod\">\n              <div className=\"container-comments\">\n                <CommentSection postId={post.id} />\n              </div>\n            </div>\n            {/* \n                   // </DropdownDelMod> */}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\pages\\Signup.js",[],"C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\pages\\Profile.js",["73","74"],"import React, { useContext, useState, useEffect } from \"react\";\nimport DataContext from \"../DataContext\";\nimport \"../style/profile.css\";\nimport DeleteAccModal from \"../components/DeleteAccModal\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Profile() {\n  const history = useHistory();\n\n  const [isOpenDeleteAccModal, setIsOpenDeleteAccModal] = useState(false);\n  const [isprofileDeleted, setisprofileDeleted] = useState(false);\n\n  const { dataUser, LStoken } = useContext(DataContext);\n\n  // redirection if user is not logged //\n\n  function redirectLogin() {\n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    if (!LStoken) {\n      redirectLogin();\n    }\n  }, []);\n\n  /////////////////////////////////////\n\n  function deleteAccount() {\n    //  function deleteAccount(id) {\n    Axios.delete(`http://localhost:4200/api/user/delete/${dataUser.id}`).then(\n      (response) => {\n        console.log(response + \"utilsateur supprimé\");\n        setisprofileDeleted(true);\n        localStorage.setItem(\"token\", \"\");\n        localStorage.setItem(\"id\", \"\");\n      }\n    );\n  }\n\n  if (isprofileDeleted) {\n    return (\n      <div className=\"main-container\">\n        <div className=\"delete-profile-msg\">Profile supprimé</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"main-container\">\n      <h1 className=\"hidden-h1\">Profile</h1>\n      <div className=\"info-container\">\n        <div className=\"info\">\n          <h2>Informations sur le profile</h2>\n          <div className=\"underline\" />\n          <table>\n            <thead className=\"thead\">\n              <tr>\n                <th className=\"column title\" colSpan=\"1\">\n                  champs\n                </th>\n                <th className=\"column date\" colSpan=\"1\">\n                  infos utilisateur\n                </th>\n              </tr>\n            </thead>\n\n            <tr>\n              <td>\n                {\" \"}\n                <p className=\"profile-info-input\">\n                  nom d&apos;utilisateur\n                </p>{\" \"}\n              </td>\n              <td>\n                {\" \"}\n                <p className=\"profile-line-data\"> {dataUser.name}</p>{\" \"}\n              </td>\n            </tr>\n\n            <tr>\n              <td>\n                {\" \"}\n                <p className=\"profile-info-input\">email</p>{\" \"}\n              </td>\n              <td>\n                {\" \"}\n                <p className=\"profile-line-data\">{dataUser.email}</p>{\" \"}\n              </td>\n            </tr>\n\n            <tr>\n              <td>\n                {\" \"}\n                <p className=\"profile-info-input\">créé le</p>{\" \"}\n              </td>\n              <td>\n                {\" \"}\n                <p className=\"profile-line-data\">{dataUser.createdAt}</p>{\" \"}\n              </td>\n            </tr>\n          </table>\n\n          {dataUser.moderator == true ? (\n            <div className=\"card-status admin\">ADMIN STATUS</div>\n          ) : (\n            <div className=\"card-status user\">USER STATUS</div>\n          )}\n        </div>\n      </div>\n      <button\n        className=\"delete-account-button\"\n        onClick={() => setIsOpenDeleteAccModal(true)}\n      >\n        Supprimer mon compte\n      </button>\n      <DeleteAccModal\n        open={isOpenDeleteAccModal}\n        onClose={() => setIsOpenDeleteAccModal(false)}\n      >\n        Voulez-vous vraiment supprimer votre compte ?\n        <div className=\"answer-btn-box\">\n          <button\n            className=\"btn-answer yes\"\n            onClick={() => deleteAccount(dataUser.id)}\n          >\n            Oui\n          </button>\n        </div>\n      </DeleteAccModal>\n    </div>\n  );\n}\n","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\Header.js",[],"C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\Modal.js",[],"C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\CommentSection.js",["75","76","77","78","79"],"import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport AddCommentModal from './AddCommentModal'\nimport DataContext from '../DataContext'\nimport Axios from \"axios\";\nimport { FaTrashAlt } from 'react-icons/fa';\nimport '../style/Comment.css'\n\n\nexport default function CommentSection({ postId }) {\n\n    const { dataUser, LStoken } = useContext(DataContext)\n    const [comments, setComments] = useState([])\n    const [isOpenCommentModal, setIsOpenCommentModal] = useState(false)\n    const [comment, setComment] = useState('')\n    const userId = dataUser.id\n\n\n    const fetchComments = useCallback(() => {\n        Axios.get(`http://localhost:4200/api/comment/ofpost/${postId}`,\n            {\n                headers: {\n                    Authorization: LStoken\n                }\n            }\n        )\n            .then((response) => {\n                setComments(response.data)\n\n            })\n    },\n        // [LStoken]\n    )\n\n    const submitComment = useCallback(() => {\n        console.log(LStoken)\n        const userId = dataUser.id\n        const userName = dataUser.name\n        console.log(postId)\n        console.log(userName)\n        Axios.post(`http://localhost:4200/api/comment/${postId}`,\n            {\n                content: comment,\n                userId: userId,\n                userName: userName\n            },\n            {\n                headers: {\n                    Authorization: LStoken\n                }\n            },\n        )\n        setIsOpenCommentModal(!isOpenCommentModal)\n        // refresh page after submit\n        window.location.reload();\n        setComments([...comments, { comment: comment, userName: userName }])\n\n    }, [comment, postId])\n\n\n    const deleteComment = (id) => {\n        console.log(id)\n        Axios.delete(`http://localhost:4200/api/comment/${id}`,\n            {\n                headers: {\n                    Authorization: LStoken\n                }\n            }\n        )\n\n        const newComments = comments.filter((comment) => comment.id !== id);\n        setComments(newComments)\n\n    }\n\n    useEffect(() => {\n        fetchComments();\n\n    }, []);\n\n\n    return (\n        <div>\n            <div className=\"horizontal-bar\"></div>\n            <button className=\"add-comment-btn\" onClick={() => setIsOpenCommentModal(true)}>Add a comment</button>\n\n            <AddCommentModal open={isOpenCommentModal} onClose={() => setIsOpenCommentModal(false)}>\n                <textarea className=\"input-content\" placeholder=\"Add a comment\" name=\"content\" type=\"text\"\n                    onChange={(e) => {\n                        setComment(e.target.value)\n                    }}></textarea>\n                <button className=\"submit-btn\" onClick={submitComment}>SUBMIT</button>\n            </AddCommentModal>\n\n\n            <div className=\"comment-section\">\n                {comments.map((comment) => {\n\n                    return (\n                        <div className=\"comment-single\">\n                            <div className=\"comment-inner-container\">\n                                <p className=\"comment-of\">- commentaire créé par {comment.userName} -</p>\n                                <p className=\"comment-text\">{comment.content}</p>\n                            </div>\n\n                            {comment.userId == userId || dataUser.moderator == true ?\n\n                                <FaTrashAlt className=\"delete-comment-btn\" onClick={() => deleteComment(comment.id)} />\n\n                                : null\n\n                            }\n\n\n\n                        </div>\n                    )\n                })}\n            </div>\n\n        </div>\n    )\n\n\n}\n","C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\ModifyModal.js",[],"C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\DeleteAccModal.js",[],"C:\\Users\\aubin\\Desktop\\OpenClassrooms\\Groupomania\\frontend\\src\\components\\AddCommentModal.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":20,"column":6,"nodeType":"86","endLine":20,"endColumn":8,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":48,"column":6,"nodeType":"86","endLine":48,"endColumn":15,"suggestions":"89"},{"ruleId":"84","severity":1,"message":"90","line":59,"column":6,"nodeType":"86","endLine":59,"endColumn":22,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"92","line":85,"column":6,"nodeType":"86","endLine":85,"endColumn":65,"suggestions":"93"},{"ruleId":"84","severity":1,"message":"94","line":91,"column":6,"nodeType":"86","endLine":91,"endColumn":8,"suggestions":"95"},{"ruleId":"84","severity":1,"message":"96","line":116,"column":6,"nodeType":"86","endLine":116,"endColumn":65,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":230,"column":30,"nodeType":"100","messageId":"101","endLine":230,"endColumn":32},{"ruleId":"98","severity":1,"message":"99","line":230,"column":62,"nodeType":"100","messageId":"101","endLine":230,"endColumn":64},{"ruleId":"84","severity":1,"message":"85","line":26,"column":6,"nodeType":"86","endLine":26,"endColumn":8,"suggestions":"102"},{"ruleId":"98","severity":1,"message":"99","line":105,"column":31,"nodeType":"100","messageId":"101","endLine":105,"endColumn":33},{"ruleId":"84","severity":1,"message":"103","line":18,"column":27,"nodeType":"104","endLine":18,"endColumn":38},{"ruleId":"84","severity":1,"message":"105","line":57,"column":8,"nodeType":"86","endLine":57,"endColumn":25,"suggestions":"106"},{"ruleId":"84","severity":1,"message":"107","line":78,"column":8,"nodeType":"86","endLine":78,"endColumn":10,"suggestions":"108"},{"ruleId":"98","severity":1,"message":"99","line":105,"column":45,"nodeType":"100","messageId":"101","endLine":105,"endColumn":47},{"ruleId":"98","severity":1,"message":"99","line":105,"column":77,"nodeType":"100","messageId":"101","endLine":105,"endColumn":79},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'LStoken' and 'redirectLogin'. Either include them or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has a missing dependency: 'redirectLogin'. Either include it or remove the dependency array.",["112"],"React Hook useCallback has an unnecessary dependency: 'posts'. Either exclude it or remove the dependency array.",["113"],"React Hook useCallback has missing dependencies: 'dataUser.id' and 'dataUser.name'. Either include them or remove the dependency array.",["114"],"React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["115"],"React Hook useCallback has missing dependencies: 'dataUser.id', 'dataUser.name', and 'modifyPostId'. Either include them or remove the dependency array.",["116"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["117"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","React Hook useCallback has missing dependencies: 'LStoken', 'comments', 'dataUser.id', 'dataUser.name', and 'isOpenCommentModal'. Either include them or remove the dependency array. You can also do a functional update 'setIsOpenCommentModal(i => ...)' if you only need 'isOpenCommentModal' in the 'setIsOpenCommentModal' call.",["118"],"React Hook useEffect has a missing dependency: 'fetchComments'. Either include it or remove the dependency array.",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"120","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"120","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [LStoken, redirectLogin]",{"range":"136","text":"137"},{"range":"138","text":"137"},"Update the dependencies array to be: [LStoken]",{"range":"139","text":"140"},"Update the dependencies array to be: [dataUser.name, dataUser.id, title, content, file, LStoken, isOpenModal, posts]",{"range":"141","text":"142"},"Update the dependencies array to be: [fetchPosts]",{"range":"143","text":"144"},"Update the dependencies array to be: [dataUser.name, dataUser.id, title, content, file, modifyPostId, LStoken, isOpenModal, posts]",{"range":"145","text":"146"},{"range":"147","text":"137"},"Update the dependencies array to be: [LStoken, comment, comments, dataUser.id, dataUser.name, isOpenCommentModal, postId]",{"range":"148","text":"149"},"Update the dependencies array to be: [fetchComments]",{"range":"150","text":"151"},[454,456],"[LStoken, redirectLogin]",[1482,1491],[1756,1772],"[LStoken]",[2651,2710],"[dataUser.name, dataUser.id, title, content, file, LStoken, isOpenModal, posts]",[2796,2798],"[fetchPosts]",[3672,3731],"[dataUser.name, dataUser.id, title, content, file, modifyPostId, LStoken, isOpenModal, posts]",[720,722],[1691,1708],"[LStoken, comment, comments, dataUser.id, dataUser.name, isOpenCommentModal, postId]",[2136,2138],"[fetchComments]"]